{
  "openapi": "3.0.3",
  "info": {
    "title": "Meal Planner API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://mealplanner-y9z9.onrender.com/api/v1",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Creates a new user account with email, password, and name.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input (e.g., email already exists)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/login": {
      "post": {
        "summary": "User login",
        "description": "Authenticates a user and returns a JWT token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login with JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3ZDVjNjdlNzQ0ODQ3NGUwMjQyMjQwNiIsImlhdCI6MTc0MjA2MzgyNSwiZXhwIjoxNzQyMDY3NDI1fQ.UBDZoJIt3bsJ-g6pDK9Vjk760NJ_8dPuH5a9CWri8h0"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/grocery-list": {
      "get": {
        "summary": "Get grocery list",
        "description": "Retrieves the grocery list for the authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Grocery list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroceryList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add to grocery list",
        "description": "Adds items to the grocery list for the authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroceryListRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Items added to grocery list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroceryList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input (e.g., missing or empty items array)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update grocery list",
        "description": "Updates the grocery list for the authenticated user by replacing the entire items array.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroceryListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Grocery list updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroceryList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input (e.g., missing or invalid items array)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete from grocery list",
        "description": "Removes an item from the grocery list for the authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "itemId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the item to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Item deleted from grocery list"
          },
          "400": {
            "description": "Invalid input (e.g., missing itemId)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Grocery list or item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/pantry-list": {
      "get": {
        "summary": "Get pantry list",
        "description": "Retrieves the pantry list for the authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Pantry list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pantrylist"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add to pantry list",
        "description": "Adds items to the pantry list for the authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pantrylistRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Items added to pantry list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pantrylist"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input (e.g., missing or empty items array)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update pantry list",
        "description": "Updates the pantry list for the authenticated user by replacing the entire items array.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pantrylistRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pantry list updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pantrylist"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input (e.g., missing or invalid items array)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete from pantry list",
        "description": "Removes an item from the pantry list for the authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "itemId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the item to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Item deleted from pantry list"
          },
          "400": {
            "description": "Invalid input (e.g., missing itemId)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Pantry list or item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/meals": {
      "get": {
        "summary": "Get all user's meals",
        "description": "Retrieves all meals for the authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of user's meals",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 2
                    },
                    "meals": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Meal"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add new meal",
        "description": "Creates a new meal for the authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "ingredients",
                  "mealType",
                  "calories",
                  "macros"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Chicken Salad"
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "quantity"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "chicken breast"
                        },
                        "quantity": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  },
                  "instructions": {
                    "type": "string",
                    "example": "Mix all ingredients together and serve chilled."
                  },
                  "mealType": {
                    "type": "string",
                    "enum": [
                      "breakfast",
                      "lunch",
                      "dinner",
                      "snack"
                    ],
                    "example": "lunch"
                  },
                  "calories": {
                    "type": "number",
                    "example": 350
                  },
                  "macros": {
                    "type": "object",
                    "required": [
                      "protein",
                      "carbs",
                      "fats"
                    ],
                    "properties": {
                      "protein": {
                        "type": "number",
                        "example": 30
                      },
                      "carbs": {
                        "type": "number",
                        "example": 15
                      },
                      "fats": {
                        "type": "number",
                        "example": 12
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Meal created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Meal added successfully"
                    },
                    "meal": {
                      "$ref": "#/components/schemas/Meal"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/meals/{mealId}": {
      "put": {
        "summary": "Update meal",
        "description": "Updates an existing meal for the authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mealId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the meal to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "ingredients",
                  "mealType",
                  "calories",
                  "macros"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Chicken Salad"
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "quantity"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "chicken breast"
                        },
                        "quantity": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  },
                  "instructions": {
                    "type": "string",
                    "example": "Mix all ingredients together and serve chilled."
                  },
                  "mealType": {
                    "type": "string",
                    "enum": [
                      "breakfast",
                      "lunch",
                      "dinner",
                      "snack"
                    ],
                    "example": "lunch"
                  },
                  "calories": {
                    "type": "number",
                    "example": 350
                  },
                  "macros": {
                    "type": "object",
                    "required": [
                      "protein",
                      "carbs",
                      "fats"
                    ],
                    "properties": {
                      "protein": {
                        "type": "number",
                        "example": 30
                      },
                      "carbs": {
                        "type": "number",
                        "example": 15
                      },
                      "fats": {
                        "type": "number",
                        "example": 12
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Meal updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Meal updated successfully"
                    },
                    "meal": {
                      "$ref": "#/components/schemas/Meal"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Meal not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete meal",
        "description": "Deletes a specific meal for the authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mealId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the meal to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Meal deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Meal not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/meals/{id}": {
      "get": {
        "summary": "Get meals",
        "description": "Retrieve a list of available meals.",
        "responses": {
          "200": {
            "description": "List of meals",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "12345"
                      },
                      "name": {
                        "type": "string",
                        "example": "Chicken Salad"
                      },
                      "description": {
                        "type": "string",
                        "example": "A healthy chicken salad with fresh vegetables."
                      },
                      "calories": {
                        "type": "number",
                        "example": 350
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add meal",
        "description": "Adds a new meal to the meal list.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Chicken Salad"
                  },
                  "description": {
                    "type": "string",
                    "example": "A healthy chicken salad with fresh vegetables."
                  },
                  "calories": {
                    "type": "number",
                    "example": 350
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Meal added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meal"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update meal",
        "description": "Updates an existing meal in the meal list.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Chicken Salad"
                  },
                  "description": {
                    "type": "string",
                    "example": "A healthy chicken salad with fresh vegetables."
                  },
                  "calories": {
                    "type": "number",
                    "example": 350
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Meal updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meal"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete meal",
        "description": "Deletes a meal from the meal list.",
        "parameters": [
          {
            "in": "query",
            "name": "mealId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the meal to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Meal deleted successfully"
          },
          "400": {
            "description": "Invalid input (e.g., missing mealId)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Meal not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserRegistration": {
        "type": "object",
        "required": [
          "email",
          "password",
          "name"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "Passw0rd!"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "67d5c67e7448474e02422406"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          }
        }
      },
      "UserLogin": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "Passw0rd!"
          }
        }
      },
      "GroceryListRequest": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "67d5c67e7448474e02422408"
                },
                "name": {
                  "type": "string",
                  "example": "Chicken Breast"
                },
                "quantity": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        }
      },
      "GroceryList": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "67d5c67e7448474e02422406"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "67d5c67e7448474e02422408"
                },
                "name": {
                  "type": "string",
                  "example": "Chicken Breast"
                },
                "quantity": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        }
      },
      "pantrylistRequest": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "67d5c67e7448474e02422408"
                },
                "name": {
                  "type": "string",
                  "example": "Chicken Breast"
                },
                "quantity": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        }
      },
      "pantrylist": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "67d5c67e7448474e02422406"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "67d5c67e7448474e02422408"
                },
                "name": {
                  "type": "string",
                  "example": "Chicken Breast"
                },
                "quantity": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        }
      },
      "Meal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "60d21b4667d0d8992e610c85"
          },
          "name": {
            "type": "string",
            "example": "Chicken Salad"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "chicken breast"
                },
                "quantity": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          },
          "instructions": {
            "type": "string",
            "example": "Mix all ingredients together and serve chilled."
          },
          "mealType": {
            "type": "string",
            "example": "lunch"
          },
          "calories": {
            "type": "number",
            "example": 350
          },
          "macros": {
            "type": "object",
            "properties": {
              "protein": {
                "type": "number",
                "example": 30
              },
              "carbs": {
                "type": "number",
                "example": 15
              },
              "fats": {
                "type": "number",
                "example": 12
              }
            }
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "example": "2023-03-16T12:30:45Z"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Invalid request data"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from /login"
      }
    }
  }
}